
document.addEventListener("DOMContentLoaded", function () {
    loadProducts();

    let confirmBtn = document.getElementById("confirm-buy-btn");
    if (confirmBtn) {
        console.log("‚úÖ N√∫t x√°c nh·∫≠n ƒë√£ ƒë∆∞·ª£c t√¨m th·∫•y:", confirmBtn);
    } else {
        console.error("‚ùå N√∫t x√°c nh·∫≠n ch∆∞a t·ªìn t·∫°i khi DOMContentLoaded ch·∫°y!");
    }

    const modal = document.getElementById("quantity-modal");
    if (modal) {
        modal.style.display = "none"; // ·∫®n modal n·∫øu t·ªìn t·∫°i
    } else {
        console.error("‚ùå Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ #quantity-modal!");
    }
});
// H√†m t·∫£i s·∫£n ph·∫©m v√† render
let allProducts = []; // Bi·∫øn to√†n c·ª•c ƒë·ªÉ l∆∞u tr·ªØ t·∫•t c·∫£ s·∫£n ph·∫©m

function loadProducts() {
    fetch("/api/products/")
        .then(response => response.json())
        .then(data => {
            allProducts = data; // L∆∞u tr·ªØ t·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÉ s·ª≠ d·ª•ng l·∫°i
            renderProducts(allProducts); // Hi·ªÉn th·ªã t·∫•t c·∫£ s·∫£n ph·∫©m
            loadBrandsAndCategories(data); // T·∫£i b·ªô l·ªçc sau khi c√≥ d·ªØ li·ªáu
        })
        .catch(error => console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m:", error));
}

// H√†m t·∫£i c√°c b·ªô l·ªçc (H√£ng s·∫£n xu·∫•t, Th·ªÉ lo·∫°i)
function loadBrandsAndCategories(products) {
    const brands = new Set();
    const categories = new Set();

    // Duy·ªát qua t·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÉ l·∫•y c√°c gi√° tr·ªã duy nh·∫•t c·ªßa "thuong_hieu" v√† "danh_muc"
    products.forEach(product => {
        if (product.thuong_hieu) brands.add(product.thuong_hieu);
        if (product.danh_muc) categories.add(product.danh_muc);
    });

    // C·∫≠p nh·∫≠t dropdown cho h√£ng s·∫£n xu·∫•t
    const brandSelect = document.getElementById("brand-filter");
    brandSelect.innerHTML = '<option value="">T·∫•t c·∫£ c√°c h√£ng</option>';
    brands.forEach(brand => {
        const option = document.createElement("option");
        option.value = brand;
        option.textContent = brand;
        brandSelect.appendChild(option);
    });

    // C·∫≠p nh·∫≠t dropdown cho th·ªÉ lo·∫°i
    const categorySelect = document.getElementById("category-filter");
    categorySelect.innerHTML = '<option value="">T·∫•t c·∫£ c√°c th·ªÉ lo·∫°i</option>';
    categories.forEach(category => {
        const option = document.createElement("option");
        option.value = category;
        option.textContent = category;
        categorySelect.appendChild(option);
    });
}

// G·ªçi h√†m khi trang ƒë√£ t·∫£i xong
document.addEventListener("DOMContentLoaded", function () {
    loadProducts(); // L·∫ßn ƒë·∫ßu t·∫£i s·∫£n ph·∫©m v√† b·ªô l·ªçc
});

// H√†m g·ªçi API ƒë·ªÉ t·∫£i s·∫£n ph·∫©m v√† √°p d·ª•ng b·ªô l·ªçc
function loadFilteredProducts() {
    const searchQuery = document.getElementById("search-input").value.toLowerCase();
    const sortValue = document.getElementById("sort-filter").value;
    const brandValue = document.getElementById("brand-filter").value;
    const categoryValue = document.getElementById("category-filter").value;

    console.log("B·ªô l·ªçc gi√° tr·ªã: ", {searchQuery, sortValue, brandValue, categoryValue});

    // L·ªçc s·∫£n ph·∫©m t·ª´ t·∫•t c·∫£ s·∫£n ph·∫©m ƒë√£ t·∫£i v·ªÅ
    let filteredProducts = allProducts;

    if (searchQuery) {
        filteredProducts = filteredProducts.filter(product =>
            product.ten_san_pham.toLowerCase().includes(searchQuery) ||
            product.mo_ta.toLowerCase().includes(searchQuery)
        );
    }

    if (brandValue) {
        filteredProducts = filteredProducts.filter(product => product.thuong_hieu === brandValue);
    }

    if (categoryValue) {
        filteredProducts = filteredProducts.filter(product => product.danh_muc === categoryValue);
    }

    // S·∫Øp x·∫øp s·∫£n ph·∫©m n·∫øu c√≥
    if (sortValue === "price_asc") {
        filteredProducts.sort((a, b) => {
            const priceA = a.gia_sau_giam || a.gia;
            const priceB = b.gia_sau_giam || b.gia;
            return priceA - priceB; // S·∫Øp x·∫øp theo gi√° tr·ªã tƒÉng d·∫ßn (small to large)
        });
    } else if (sortValue === "price_desc") {
        filteredProducts.sort((a, b) => {
            const priceA = a.gia_sau_giam || a.gia;
            const priceB = b.gia_sau_giam || b.gia;
            return priceB - priceA; // S·∫Øp x·∫øp theo gi√° tr·ªã gi·∫£m d·∫ßn (large to small)
        });
    } else if (sortValue === "name") {
        filteredProducts.sort((a, b) => a.ten_san_pham.localeCompare(b.ten_san_pham));
    }

    console.log("S·∫£n ph·∫©m sau khi l·ªçc v√† s·∫Øp x·∫øp: ", filteredProducts);

    // Hi·ªÉn th·ªã s·∫£n ph·∫©m sau khi l·ªçc v√† s·∫Øp x·∫øp
    renderProducts(filteredProducts);
}

// Th√™m c√°c s·ª± ki·ªán cho c√°c b·ªô l·ªçc
document.getElementById("search-input").addEventListener("input", loadFilteredProducts);
document.getElementById("sort-filter").addEventListener("change", loadFilteredProducts);
document.getElementById("brand-filter").addEventListener("change", loadFilteredProducts);
document.getElementById("category-filter").addEventListener("change", loadFilteredProducts);

function renderProducts(products) {
    const productContainer = document.getElementById("productallall");
    productContainer.innerHTML = products.map(product => {
        const formattedOldPrice = product.gia.toLocaleString() + "ƒë"; // Gi√° g·ªëc
        const formattedNewPrice = product.gia_sau_giam ? product.gia_sau_giam.toLocaleString() + "ƒë" : formattedOldPrice;

        const priceDisplay = product.gia_sau_giam 
            ? `<span class="old-price">${formattedOldPrice}</span> <span class="new-price">${formattedNewPrice}</span>`
            : `<span class="new-price">${formattedNewPrice}</span>`;

        // Ki·ªÉm tra s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
        const isOutOfStock = product.so_luong === 0;
        const buttonText = isOutOfStock ? "H·∫øt h√†ng" : "Mua ngay";
        const buttonDisabled = isOutOfStock ? "disabled" : "";
        const buttonOnClick = isOutOfStock 
            ? "" 
            : `onclick="openQuantityModal(
                ${product.id}, 
                '${product.ten_san_pham.replace(/'/g, "\\'")}', 
                '${product.hinh_anh || 'images/default.png'}',
                ${product.gia},
                ${product.gia_sau_giam || product.gia},
                '${product.thuong_hieu}',
                '${product.danh_muc}'
            )"`;

        return `
        <div class="col-sm-4 product-item" 
            data-name="${product.ten_san_pham.toLowerCase()}"
            data-price="${product.gia_sau_giam || product.gia}"
            data-brand="${product.thuong_hieu}"
            data-category="${product.danh_muc}">
            
            <div class="best_shoes1">
                <p class="best_text">${product.ten_san_pham}</p>
                <div class="shoes_icon">
                    <img src="${product.hinh_anh || 'images/default.png'}" 
                         alt="${product.ten_san_pham}">
                </div>
                <div class="thuonghieu">  ${product.thuong_hieu}
                </div> 
                <div class="shoes_price">
                    ${priceDisplay}
                </div>  
            </div>
            <button class="buy-btn" ${buttonDisabled} ${buttonOnClick}>${buttonText}</button>
        </div>`;
    }).join("");
}

function openQuantityModal(productId, productName, productImg, originalPrice, discountedPrice, productBrand, productCategory) {
    console.log("üõí M·ªü modal v·ªõi s·∫£n ph·∫©m:", productId, productName);

    if (!productId) {
        console.error("‚ùå L·ªói: productId kh√¥ng h·ª£p l·ªá!", productId);
        return;
    }

    document.getElementById("modal-product-name").textContent = productName;
    document.getElementById("modal-product-img").src = productImg || "images/default.png";

    const priceElement = document.getElementById("modal-product-price");
    if (originalPrice !== discountedPrice) {
        priceElement.innerHTML = `<span class="old-price">${originalPrice.toLocaleString()}ƒë</span> <span class="new-price">${discountedPrice.toLocaleString()}ƒë</span>`;
    } else {
        priceElement.innerHTML = `<span class="new-price">${discountedPrice.toLocaleString()}ƒë</span>`;
    }

    document.getElementById("modal-product-brand").textContent = productBrand;
    document.getElementById("modal-product-category").textContent = productCategory;
    document.getElementById("modal-quantity").value = 1;
    

    const confirmButton = document.getElementById("confirm-buy-btn");
    confirmButton.setAttribute("data-product-id", productId);

    // X√≥a s·ª± ki·ªán c≈© tr∆∞·ªõc khi th√™m s·ª± ki·ªán m·ªõi
    confirmButton.removeEventListener("click", handleConfirmBuyWrapper);
    confirmButton.addEventListener("click", handleConfirmBuyWrapper);

    document.getElementById("quantity-modal").style.display = "flex";
}

// ƒê·ªÉ tr√°nh m·∫•t event listener, t·∫°o m·ªôt h√†m b·ªçc cho handleConfirmBuy
function handleConfirmBuy(productId) {
    console.log("‚úÖ N√∫t x√°c nh·∫≠n ƒë√£ ƒë∆∞·ª£c b·∫•m!");
    
    // Ki·ªÉm tra xem ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p ch∆∞a
    const token = localStorage.getItem("access_token");
    if (!token) {
        console.log("‚ö†Ô∏è Ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p. Hi·ªÉn th·ªã popup y√™u c·∫ßu ƒëƒÉng nh·∫≠p.");
        
        // Hi·ªÉn th·ªã popup y√™u c·∫ßu ƒëƒÉng nh·∫≠p v√† kh√¥ng g·ª≠i request ƒë·∫øn API
        displayNotification("‚ùå B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán thao t√°c n√†y!", "error");
        showLoginPopup();  // Hi·ªÉn th·ªã popup ƒëƒÉng nh·∫≠p
        return; // D·ª´ng l·∫°i v√† kh√¥ng g·ª≠i request
    }

    const quantity = parseInt(document.getElementById("modal-quantity").value);

    if (quantity < 1) {
        console.log("‚ö†Ô∏è S·ªë l∆∞·ª£ng kh√¥ng h·ª£p l·ªá!");
        return;
    }

    console.log("üì§ G·ª≠i request v·ªõi productId:", productId, "S·ªë l∆∞·ª£ng:", quantity);

    fetch("/api/cart/add/", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer " + token
        },
        body: JSON.stringify({ san_pham_id: productId, so_luong: quantity }),
    })
    .then(response => response.json())
    .then(data => {
        console.log("‚úÖ Ph·∫£n h·ªìi t·ª´ API:", data);

        if (data.message && data.message.includes("ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng")) {
            displayNotification("üéâ " + data.message, "success");

            closeQuantityModal(); // ƒê√≥ng modal ngay khi th√™m s·∫£n ph·∫©m th√†nh c√¥ng

            updateCartUI(data); // Gi·∫£ s·ª≠ API tr·∫£ v·ªÅ d·ªØ li·ªáu gi·ªè h√†ng
        } else {
            console.error("‚ùå L·ªói t·ª´ server:", data);
            displayNotification("‚ùå " + (data.message || "L·ªói khi th√™m s·∫£n ph·∫©m!"), "error");
        }
    })
    .catch(error => {
        console.error("‚ùå L·ªói khi g·ª≠i request:", error);
        displayNotification("‚ùå C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!", "error");
    });
}

function closeQuantityModal() {
    const modal = document.getElementById("quantity-modal");
    if (modal) {
        modal.style.display = "none";
    } else {
        console.error("‚ùå Kh√¥ng t√¨m th·∫•y modal ƒë·ªÉ ƒë√≥ng!");
    }
}

function updateCartUI(cart) {
    const cartCountElement = document.getElementById("cart-count");
    const cartTotalElement = document.getElementById("cart-total");

    // Ki·ªÉm tra n·∫øu ph·∫ßn t·ª≠ t·ªìn t·∫°i
    if (cartCountElement) {
        cartCountElement.textContent = cart.count; // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng
    }

    if (cartTotalElement) {
        cartTotalElement.textContent = cart.total.toLocaleString() + "ƒë"; // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
    }
}

function displayNotification(message, type) {
    console.log("üì¢ Hi·ªÉn th·ªã th√¥ng b√°o:", message, type); // Ki·ªÉm tra log

    // T·∫°o ho·∫∑c l·∫•y container c·ªßa th√¥ng b√°o
    let notificationContainer = document.getElementById('notification-container');
    if (!notificationContainer) {
        notificationContainer = document.createElement('div');
        notificationContainer.id = 'notification-container';
        document.body.appendChild(notificationContainer);
    }

    // Ki·ªÉm tra n·∫øu ƒë√£ c√≥ qu√° 3 th√¥ng b√°o trong container
    if (notificationContainer.querySelectorAll(".notification").length >= 3) {
        // ·∫®n th√¥ng b√°o ƒë·∫ßu ti√™n
        const firstNotification = notificationContainer.querySelector(".notification");
        if (firstNotification) {
            firstNotification.style.opacity = "0";
            setTimeout(() => {
                firstNotification.remove();
            }, 500); // X√≥a sau khi ·∫©n
        }
    }

    // T·∫°o v√† th√™m th√¥ng b√°o m·ªõi
    const notification = document.createElement("div");
    notification.classList.add("notification", type);
    notification.textContent = message;

    notificationContainer.appendChild(notification);

    // Th√™m hi·ªáu ·ª©ng m·ªù d·∫ßn v√† x√≥a th√¥ng b√°o sau 2 gi√¢y
    setTimeout(() => {
        notification.style.opacity = "0";
        setTimeout(() => {
            notification.remove();
        }, 500);
    }, 2000);
}
// Hi·ªÉn th·ªã popup y√™u c·∫ßu ƒëƒÉng nh·∫≠p
function showLoginPopup() {
    // Overlay n·ªÅn m·ªù
    const overlay = document.createElement("div");
    overlay.style.position = "fixed";
    overlay.style.top = "0";
    overlay.style.left = "0";
    overlay.style.width = "100%";
    overlay.style.height = "100%";
    overlay.style.backgroundColor = "rgba(0, 0, 0, 0.4)";
    overlay.style.zIndex = "999";

    // Popup ƒëƒÉng nh·∫≠p
    const loginPopup = document.createElement("div");
    loginPopup.classList.add("login-popup");
    loginPopup.style.position = "fixed";
    loginPopup.style.top = "50%";
    loginPopup.style.left = "50%";
    loginPopup.style.transform = "translate(-50%, -50%)";
    loginPopup.style.padding = "20px";
    loginPopup.style.background = "white";
    loginPopup.style.borderRadius = "10px";
    loginPopup.style.boxShadow = "0 5px 15px rgba(0,0,0,0.3)";
    loginPopup.style.zIndex = "1000";
    loginPopup.innerHTML = `
        <p><strong>B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán thao t√°c n√†y.</strong></p>
        <button id="login-btn" style="margin-right: 10px;">ƒêƒÉng nh·∫≠p</button>
        <button id="cancel-btn">H·ªßy</button>
    `;

    document.body.appendChild(overlay);
    document.body.appendChild(loginPopup);

    // N√∫t "ƒêƒÉng nh·∫≠p"
    document.getElementById("login-btn").addEventListener("click", function () {
        console.log("Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang ƒëƒÉng nh·∫≠p");
        window.location.href = "/login/"; // ƒê∆∞a ng∆∞·ªùi d√πng ƒë·∫øn trang ƒëƒÉng nh·∫≠p
    });

    // N√∫t "H·ªßy"
    document.getElementById("cancel-btn").addEventListener("click", function () {
        console.log("ƒê√≥ng popup");
        overlay.remove();
        loginPopup.remove();
    });
}
